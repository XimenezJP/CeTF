% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/networkPlot.R
\name{networkPlot}
\alias{networkPlot}
\title{Network integrated plot}
\usage{
networkPlot(netCond, netGO, keyTFs)
}
\arguments{
\item{netCond}{Network of a specific condition. Can be found in result of \code{\link{runAnalysis}} (see \code{\link{getNet1}} and \code{\link{getNet2}})}

\item{netGO}{Dataframe with the results of \code{\link{getGroupGO}}
(second element of list).}

\item{keyTFs}{TFs identified as importants by \code{\link{runAnalysis}} (see \code{\link{getKeyTF}})}
}
\value{
Returns an network plot with interaction between genes, TFs and/or ontologies.
}
\description{
Generate the plot for network that integrates the network data
from a condition with \code{\link{getGroupGO}} results.
}
\examples{
# load the annotation package
library(org.Hs.eg.db)

# load the pcitrif class object resulted from runAnalysis function
data(pcitrifExample)

# getting the genes in network of condition 1
genes <- unique(c(as.character(getNet1(pcitrifExample)[,1]),
                 as.character(getNet1(pcitrifExample)[,2])))

# performing getGroupGO analysis
cond1 <- getGroupGO(genes = genes,
                    ont = 'BP',
                    keyType = 'ENSEMBL',
                    annoPkg = org.Hs.eg.db)

# selecting only first 12 pathways
t1 <- head(cond1$results, 12)

# subsetting the network to have only the first 12 pathways
t2 <- subset(cond1$netGO, cond1$netGO$gene1 \%in\% as.character(t1[,1]))

# generate the networkPlot for condition1
networkPlot(netCond = getNet1(pcitrifExample),
            netGO = t2,
            keyTFs = getKeyTF(pcitrifExample))



}
